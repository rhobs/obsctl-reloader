apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: obsctl-reloader
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: obsctl-reloader
      app.kubernetes.io/instance: obsctl-reloader
      app.kubernetes.io/name: obsctl-reloader
      app.kubernetes.io/version: latest
    name: obsctl-reloader
    namespace: observatorium-stage
  spec:
    replicas: ${REPLICAS}
    selector:
      matchLabels:
        app.kubernetes.io/component: obsctl-reloader
        app.kubernetes.io/instance: obsctl-reloader
        app.kubernetes.io/name: obsctl-reloader
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
    template:
      metadata:
        labels:
          app.kubernetes.io/component: obsctl-reloader
          app.kubernetes.io/instance: obsctl-reloader
          app.kubernetes.io/name: obsctl-reloader
          app.kubernetes.io/version: latest
      spec:
        containers:
        - env:
          - name: NAMESPACE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OBSERVATORIUM_URL
            value: ${OBSERVATORIUM_URL}
          - name: OIDC_AUDIENCE
            value: ${OIDC_AUDIENCE}
          - name: OIDC_ISSUER_URL
            value: ${OIDC_ISSUER_URL}
          - name: SLEEP_DURATION_SECONDS
            value: ${SLEEP_DURATION_SECONDS}
          - name: MANAGED_TENANTS
            value: ${MANAGED_TENANTS}
          - name: OIDC_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client_id
                name: ${OBSERVATORIUM_API_SECRET_NAME}
          - name: OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: client_secret
                name: ${OBSERVATORIUM_API_SECRET_NAME}
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          name: obsctl-reloader
          resources: {}
        serviceAccountName: obsctl-reloader
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/component: obsctl-reloader
      app.kubernetes.io/instance: obsctl-reloader
      app.kubernetes.io/name: obsctl-reloader
      app.kubernetes.io/version: latest
    name: obsctl-reloader
    namespace: observatorium-stage
  rules:
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - prometheusrules
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/component: obsctl-reloader
      app.kubernetes.io/instance: obsctl-reloader
      app.kubernetes.io/name: obsctl-reloader
      app.kubernetes.io/version: latest
    name: obsctl-reloader
    namespace: observatorium-stage
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: obsctl-reloader
  subjects:
  - kind: ServiceAccount
    name: obsctl-reloader
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/component: obsctl-reloader
      app.kubernetes.io/instance: obsctl-reloader
      app.kubernetes.io/name: obsctl-reloader
      app.kubernetes.io/version: latest
    name: obsctl-reloader
    namespace: observatorium-stage
parameters:
- name: IMAGE
  value: quay.io/app-sre/obsctl-reloader
- name: IMAGE_TAG
  value: latest
- name: OBSERVATORIUM_URL
  value: https://observatorium.api.stage.openshift.com
- name: OIDC_AUDIENCE
  value: observatorium
- name: OIDC_ISSUER_URL
  value: https://sso.redhat.com/auth/realms/redhat-external
- name: OBSERVATORIUM_API_SECRET_NAME
  value: rhobs-tenant-staging
- name: SLEEP_DURATION_SECONDS
  value: "30"
- name: MANAGED_TENANTS
  value: rhobs
- name: REPLICAS
  value: "1"
